% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Temp.R
\name{LinearModelL1}
\alias{LinearModelL1}
\title{Linear Models SquareLossIterations}
\usage{
LinearModelL1(Normalized_TrainingData, TrainingLabels, penalty, opt.thresh,
  Initial.Vector, StepSize.Scalar, max.iterations = 5000, Lambda = 10)
}
\arguments{
\item{Normalized_TrainingData}{numeric imput feature matrix [n x p]}

\item{TrainingLabels}{numberic input label vector [n]
either all 0/1 for binary classification or other real numbers for regression}

\item{StepSize.Scalar}{scalar integer, determines the size of each step.}

\item{Iterations}{integer that determines the number of steps taken to find the optimal}
}
\value{
list of:
   L1Error.vector = L1Error.vector,
   selected.steps = selected.steps,
   weight.mat = W.Matrix,
   weight.vec = as.matrix(W.Matrix[selected.steps,])
   W.Matrix:  W.Matrix is[n_features+1 x max.iterations], where the first element of the weight vector is be the intercept term(AKA Bias).
}
\description{
Makes iterative steps using gradient decent to find a solution to the Linear Models problem
}
\examples{
 Spam<-Prep_Spam()
 folds.n = 4L
 Scalar.Step = 0.4
 max.iterations = 3000L
 fold.vec = as.double(sample(1:(4L),Spam$n_Elements,replace=T))
 Scaled.Train  = scale(Spam$TrainingData)
 Initial.Vector <- array(as.matrix(rep(0,NCOL(Scaled.Train)+1)),dim=c(1,NCOL(Scaled.Train)+1))
 y.vec <- as.numeric(Spam$TrainingLabels)

 weight.vec = LinearModelL1(Scaled.Train,y.vec,0.5,1200,Initial.Vector,1,max.iterations=50)$weight.vec
}
