% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knn.R
\name{knn}
\alias{knn}
\title{K Nearest Neighbor Algorithm
This function uses the Commonly used algorithm, K Nearest Neighbor's to select a prediction of a given instance.
This function Wraps around c++ code to call it using r. The actual implmentation is written in Cpp, and is located
in the Src/knn.cpp. The R code does call the Interface.cpp implementation in the same folder.}
\usage{
knn(x.mat, y.vec, testx.vec, max.neighbors)
}
\arguments{
\item{x.mat}{numeric imput feature matrix [n x p]}

\item{y.vec}{numberic input label vector [n],
either all 0/1 for binary classification or other real numbers for regression}

\item{testx.vec}{numberic test festure vector [p], that is used to test the different hyperparameters for k (1 to MAX.K) of KNN}

\item{max.neighbors}{scalar integer, max number of neighbors}
}
\value{
Returns a vector predicting the label, Y.Hat. The dimensions being [max.neighbors], for the prediction of each itteration of k.
}
\description{
Note: This function preforms parameter checking to verify that the input parameters are correct, before calling the .cpp implementation which does more.
}
\examples{
################### Binary Classification ######################
Spam<-Prep_Spam()
Fold.vec = Random_Folds(Spam$n_Elements,4)
Fold.n   = 4
KNNLearnCV.List = KNNLearnCV(Spam$TrainingData, Spam$TrainingLabels, 30, Fold.vec, Fold.n)
barplot(KNNLearnCV.List$train.loss.vec,main = "Spam: KNNLearnCV L2 Mean Error",xlab = "KNN Compared",ylab = "Error",beside = TRUE)

######################## Regression #########################

}
