% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NN1toKmaxPredict.R
\name{NN1toKmaxPredict}
\alias{NN1toKmaxPredict}
\title{NN1toKmaxPredict}
\usage{
NN1toKmaxPredict(TrainingData, TrainingLabels, TestData, max.neighbors)
}
\arguments{
\item{TrainingData}{numeric imput feature matrix [n x p]}

\item{TrainingLabels}{numberic input label vector [n],
either all 0/1 for binary classification or other real numbers for regression}

\item{TestData}{numberic test festure vector [p], that is used to test the different hyperparameters for k (1 to MAX.K) of KNN}

\item{max.neighbors}{scalar integer, max number of neighbors}
}
\value{
numeric vector of size [test.x.vec x max.neighbors] max.neighbors, predictions from 1 to max.neighbors
}
\description{
Wraps around c++ knn_interface code to call it using r
}
\examples{
Spam<-Prep_Spam()
Fold.vec = Random_Folds(Spam$n_Elements,4)
Fold.n   = 4
KNNLearnCV.List = NN1toKmaxPredict(TrainingData, TrainingLabels,TestData, 30)
#Where KNNLearnCV.List is a list containing the elements above, and you are free to use the returned values as you wish.

barplot(KNNLearnCV.List$train.loss.vec,main = "Spam: KNNLearnCV.L2TestError.FoldMeans",xlab = "KNN Compared",ylab = "Error",beside = TRUE)
}
