% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LMLinearSquare_Functions.R
\name{LMSquareLossIterations}
\alias{LMSquareLossIterations}
\title{Linear Models SquareLossIterations}
\usage{
LMSquareLossIterations(TrainingData, TrainingLabels, Iterations = 10,
  StepSize.Scalar)
}
\arguments{
\item{TrainingData}{numeric imput feature matrix [n x p]}

\item{TrainingLabels}{numberic input label vector [n]
either all 0/1 for binary classification or other real numbers for regression}

\item{Iterations}{integer that determines the number of steps taken to find the optimal}

\item{StepSize.Scalar}{scalar integer, determines the size of each step.}
}
\value{
numeric matrix of the weight matrix at each step, from 1 to Iterations.
Returned Matrix is[n_features+1 x max.iterations], where the first element of the weight vector is be the intercept term(AKA Bias).
}
\description{
Makes iterative steps using gradient decent to find a solution to the Linear Models problem
}
\examples{
## Example 1 With The ZipTrain Dataset:##

## Example 2 With The Spam DataSet:##
 Spam<-Prep_Spam()

 Scalar.Step = 0.1
 DeNormalizedWeights <- LMSquareLossIterations(Spam$TrainingData, Spam$TrainingLabels,Spam$Iterations,Scalar.Step)

 DeNorm.Error <-Find_Wmatrix_MeanL1Error(Spam$TrainingData, Spam$TrainingLabels,as.matrix(DeNormalizedWeights),SAheart$BinaryClassification)
 barplot(DeNorm.Error,main = "Question 1: LMSquareLossIterations:Spam",xlab = "Iteration",ylab = "Error",beside = TRUE)
}
